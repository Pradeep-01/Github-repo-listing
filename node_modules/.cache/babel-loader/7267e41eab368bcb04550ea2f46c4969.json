{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\"; //const Initialstate = {name:\"\"};\n\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Maincard = () => {\n  _s();\n\n  const [todos, setTodos] = useState({});\n  useEffect(() => {\n    fetch(`https://api.tvmaze.com/shows`).then(response => response.json()).then(data => setTodos(data));\n  }, []);\n  console.log(todos);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: todos.map(todo => {\n      console.log(todo);\n    })\n  }, void 0, false);\n};\n\n_s(Maincard, \"Y6Hw8KSc+Zg8/6z11HIcVZY+WEw=\");\n\n_c = Maincard;\nexport default Maincard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Maincard\");","map":{"version":3,"sources":["C:/Users/Pradeep/Desktop/React project/tv-schedule/src/component/Maincard.js"],"names":["React","useEffect","useState","Maincard","todos","setTodos","fetch","then","response","json","data","console","log","map","todo"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;;;;;AACA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,KAAK,CAAE,8BAAF,CAAL,CACCC,IADD,CACMC,QAAQ,IAAGA,QAAQ,CAACC,IAAT,EADjB,EAGCF,IAHD,CAGMG,IAAI,IAAGL,QAAQ,CAACK,IAAD,CAHrB;AAID,GALQ,EAKN,EALM,CAAT;AAOFC,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACE,sBAEM;AAAA,cACCA,KAAK,CAACS,GAAN,CAAUC,IAAI,IAAI;AAACH,MAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AAAkB,KAArC;AADD,mBAFN;AAOD,CAjBD;;GAAMX,Q;;KAAAA,Q;AAkBN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n//const Initialstate = {name:\"\"};\r\nconst Maincard = () => {\r\n  const [todos, setTodos] = useState({});\r\n  useEffect(() => {\r\n    fetch(`https://api.tvmaze.com/shows`)\r\n    .then(response=> response.json())\r\n    \r\n    .then(data=> setTodos(data) )\r\n  }, []);\r\n\r\nconsole.log(todos);    \r\n  return (\r\n    \r\n        <>\r\n        {todos.map(todo => {console.log(todo)})}\r\n        </>\r\n    \r\n  );\r\n};\r\nexport default Maincard;\r\n"]},"metadata":{},"sourceType":"module"}