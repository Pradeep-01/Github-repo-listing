{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pradeep\\\\Desktop\\\\React project\\\\tv-schedule\\\\src\\\\component\\\\Program.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Program = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [program, setProgram] = useState({});\n  useEffect(() => {\n    fetch(`https://api.tvmaze.com/shows/${id}`).then(response => response.json()).then(data => setProgram(data));\n  }, [id]);\n  const {\n    image,\n    name,\n    genres,\n    summary,\n    network\n  } = program;\n  console.log(network); //const genre = [genres.join(\", \")];\n\n  var {\n    medium: picture\n  } = image || {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: '10%'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: picture,\n        alt: \"loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: '70%',\n        padding: '2%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        dangerouslySetInnerHTML: {\n          __html: summary\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Genre: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            textDecoration: 'underline'\n          },\n          children: genres ? [genres.join(\", \")] : genres\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Program, \"TfORk8BSv+wim8J4wLORf+z8EFw=\", false, function () {\n  return [useParams];\n});\n\n_c = Program;\nexport default Program;\n\nvar _c;\n\n$RefreshReg$(_c, \"Program\");","map":{"version":3,"sources":["C:/Users/Pradeep/Desktop/React project/tv-schedule/src/component/Program.js"],"names":["React","useEffect","useState","useParams","Program","id","program","setProgram","fetch","then","response","json","data","image","name","genres","summary","network","console","log","medium","picture","boxSizing","display","flexWrap","flex","padding","textAlign","__html","textDecoration","join"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM;AAAEC,IAAAA;AAAF,MAASF,SAAS,EAAxB;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,KAAK,CAAE,gCAA+BH,EAAG,EAApC,CAAL,CACCI,IADD,CACMC,QAAQ,IAAGA,QAAQ,CAACC,IAAT,EADjB,EAECF,IAFD,CAEMG,IAAI,IAAGL,UAAU,CAACK,IAAD,CAFvB;AAGD,GAJQ,EAIN,CAACP,EAAD,CAJM,CAAT;AAMA,QAAM;AAACQ,IAAAA,KAAD;AAAQC,IAAAA,IAAR;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA,OAAtB;AAA+BC,IAAAA;AAA/B,MAA0CX,OAAhD;AAEAY,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ,EAXoB,CAYpB;;AACA,MAAI;AAACG,IAAAA,MAAM,EAAEC;AAAT,MAAoBR,KAAK,IAAI,EAAjC;AACA,sBACM;AAAK,IAAA,KAAK,EAAE;AAACS,MAAAA,SAAS,EAAC,YAAX;AAAwBC,MAAAA,OAAO,EAAC,MAAhC;AAAwCC,MAAAA,QAAQ,EAAC;AAAjD,KAAZ;AAAA,4BACA;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,IAAI,EAAC;AAAN,OAAZ;AAAA,6BACA;AAAM,QAAA,GAAG,EAAEJ,OAAX;AAAoB,QAAA,GAAG,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADA,eAIA;AAAK,MAAA,KAAK,EAAE;AAACI,QAAAA,IAAI,EAAC,KAAN;AAAaC,QAAAA,OAAO,EAAC;AAArB,OAAZ;AAAA,8BACA;AAAI,QAAA,KAAK,EAAE;AAACC,UAAAA,SAAS,EAAC;AAAX,SAAX;AAAA,kBAAkCb;AAAlC;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAI,QAAA,uBAAuB,EAAE;AAACc,UAAAA,MAAM,EAAEZ;AAAT;AAA7B;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAA,gCAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAH,eAA2B;AAAM,UAAA,KAAK,EAAE;AAACa,YAAAA,cAAc,EAAC;AAAhB,WAAb;AAAA,oBAA4Cd,MAAM,GAAG,CAACA,MAAM,CAACe,IAAP,CAAY,IAAZ,CAAD,CAAH,GAAyBf;AAA3E;AAAA;AAAA;AAAA;AAAA,gBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJA;AAAA;AAAA;AAAA;AAAA;AAAA,UADN;AAaD,CA3BD;;GAAMX,O;UACWD,S;;;KADXC,O;AA4BN,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst Program = () => {\r\n  const { id } = useParams();\r\n  const [program, setProgram] = useState({});\r\n  useEffect(() => {\r\n    fetch(`https://api.tvmaze.com/shows/${id}`)\r\n    .then(response=> response.json())\r\n    .then(data=> setProgram(data) )\r\n  }, [id]);\r\n\r\n  const {image, name, genres, summary, network} = program;\r\n \r\n  console.log(network);\r\n  //const genre = [genres.join(\", \")];\r\n  var {medium: picture} = image || {};\r\n  return (\r\n        <div style={{boxSizing:'border-box',display:'flex', flexWrap:'wrap'}}>\r\n        <div style={{flex:'10%'}}>\r\n        <img  src={picture} alt=\"loading\" />\r\n        </div> \r\n        <div style={{flex:'70%', padding:'2%'}}>\r\n        <h4 style={{textAlign:'center'}}>{name}</h4>\r\n        <p  dangerouslySetInnerHTML={{__html: summary}} />\r\n        <p><strong>Genre: </strong><span style={{textDecoration:'underline'}}>{genres ? [genres.join(\", \")] : genres }</span></p>\r\n\r\n        </div>\r\n        </div>\r\n  );\r\n};\r\nexport default Program;\r\n"]},"metadata":{},"sourceType":"module"}